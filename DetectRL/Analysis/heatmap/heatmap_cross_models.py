import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np

data_list = [
    # likelihood
    np.array([
            [0.5780, 0.6170, 0.2919, 0.6654],
            [0.5480, 0.6073, 0.2717, 0.6634],
            [0.5479, 0.6079, 0.2810, 0.6638],
            [0.5017, 0.5729, 0.2073, 0.6590],
        ]),
    # entropy
    np.array([
            [0.2329, 0.2220, 0.3041, 0.1361],
            [0.1298, 0.1656, 0.1870, 0.0585],
            [0.2222, 0.2171, 0.3042, 0.1317],
            [0.6686, 0.6581, 0.6668, 0.6675],
        ]),
    # rank
    np.array([
            [0.4932, 0.4367, 0.2835, 0.5549],
            [0.4492, 0.4174, 0.2301, 0.5469],
            [0.4473, 0.4130, 0.2278, 0.5470],
            [0.4401, 0.4006, 0.2070, 0.5440],
        ]),
    # logRank
    np.array([
            [0.5687, 0.6324, 0.3005, 0.6886],
            [0.5518, 0.6309, 0.2815, 0.6809],
            [0.5583, 0.6291, 0.3012, 0.6869],
            [0.4985, 0.5750, 0.1942, 0.6666],
        ]),
    # LRR
    np.array([
            [0.5212, 0.6179, 0.2470, 0.7534],
            [0.5236, 0.6551, 0.2623, 0.7558],
            [0.4573, 0.5766, 0.1891, 0.7267],
            [0.5214, 0.6223, 0.2525, 0.7551],
        ]),
    # NPR
    np.array([
            [0.4381, 0.3541, 0.2522, 0.5003],
            [0.4252, 0.3477, 0.2337, 0.4912],
            [0.4774, 0.3983, 0.3291, 0.5235],
            [0.4164, 0.3296, 0.2099, 0.4868],
        ]),
    # DetectGPT
    np.array([
            [0.2627, 0.0000, 0.1383, 0.2252],
            [0.1484, 0.0000, 0.0681, 0.1592],
            [0.2272, 0.0000, 0.1256, 0.2055],
            [0.2192, 0.0000, 0.1142, 0.2040],
        ]),
    # Fast_DetectGPT
    np.array([
            [0.5955, 0.5956, 0.1296, 0.6993],
            [0.5577, 0.5758, 0.0820, 0.6843],
            [0.0019, 0.0000, 0.0000, 0.0118],
            [0.5628, 0.5774, 0.0865, 0.6908],
        ]),
    # DNA-GPT
    np.array([
        [0.5504, 0.6418, 0.3449, 0.6541],
        [0.4517, 0.6077, 0.2280, 0.6403],
        [0.4703, 0.6109, 0.2567, 0.6460],
        [0.3409, 0.5548, 0.1463, 0.6289],
    ]),
    # Revise-Detect.
    np.array([
        [0.6272, 0.6198, 0.3166, 0.6689],
        [0.5594, 0.5903, 0.2546, 0.6280],
        [0.5782, 0.5960, 0.2728, 0.6358],
        [0.6101, 0.6090, 0.2994, 0.6587],
    ]),
    # Binoculars
    np.array([
        [0.8250, 0.8797, 0.3879, 0.9182],
        [0.7702, 0.8820, 0.3135, 0.9087],
        [0.8249, 0.8805, 0.3935, 0.9178],
        [0.8068, 0.8780, 0.3462, 0.9230],
    ]),
    # Roberta
    np.array([
            [0.9997, 0.7034, 0.6290, 0.9468],
            [0.9925, 0.9940, 0.9343, 0.9925],
            [0.9683, 0.8392, 0.9980, 0.8977],
            [0.9945, 0.9302, 0.8756, 0.9945],
        ]),
    # X-Roberta
    np.array([
            [0.9945, 0.7274, 0.7715, 0.9513],
            [0.9694, 0.9719, 0.9488, 0.9785],
            [0.9430, 0.8685, 0.9748, 0.9274],
            [0.9808, 0.9186, 0.9260, 0.9857],
    ]),

    # Roberta Large
    np.array([
            [0.9886, 0.7442, 0.7013, 0.9494],
            [0.9336, 0.9264, 0.8182, 0.9016],
            [0.7866, 0.7739, 0.9248, 0.7868],
            [0.8111, 0.7624, 0.6867, 0.7617],
        ]),

    # X-Roberta Large
    np.array([
            [0.9756, 0.7118, 0.7710, 0.9434],
            [0.9754, 0.9443, 0.8176, 0.9521],
            [0.8048, 0.7055, 0.8424, 0.7862],
            [0.9812, 0.8135, 0.7422, 0.9767],
        ])
]

rows = ['GPT3.5', 'PaLM2', 'Claude', 'Llama2']
cols = ['GPT3.5', 'PaLM2', 'Claude', 'Llama2']

cmap = plt.get_cmap('RdPu')

titles = ['Likihood', 'Rank', 'LogRank', 'LRR',
          'NPR', 'DetectGPT', 'Fast-DetectGPT', 'DNA-GPT',
          'Revise-Detect.', 'Binoculars', 'Rob-Base', 'X-Rob-Base']

fig, axes = plt.subplots(3, 4, figsize=(18, 12))  # figsize可以根据需要进行调整
fig.tight_layout(pad=2.0)

for i, ax in enumerate(axes.flatten()):
    sns.heatmap(data_list[i], annot=True, linewidths=.5, cmap=cmap,
                xticklabels=cols, yticklabels=rows, ax=ax)
    ax.set_title(titles[i])

plt.savefig('cross_models_heatmap.pdf')
plt.show()