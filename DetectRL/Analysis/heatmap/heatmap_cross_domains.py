import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np

data_list = [
    # likelihood
    np.array([
            [0.5755, 0.4088, 0.3844, 0.5581],
            [0.5745, 0.4132, 0.3908, 0.5581],
            [0.6114, 0.4631, 0.5938, 0.6798],
            [0.6149, 0.4702, 0.5712, 0.6722],
        ]),
    # entropy
    np.array([
            [0.2971, 0.5624, 0.4540, 0.3648],
            [0.3023, 0.5723, 0.4552, 0.3777],
            [0.0498, 0.1470, 0.2055, 0.0959],
            [0.0137, 0.0370, 0.0544, 0.0214],
        ]),
    # rank
    np.array([
            [0.5462, 0.3798, 0.5233, 0.5368],
            [0.2571, 0.2247, 0.2493, 0.3297],
            [0.5256, 0.3734, 0.5090, 0.5306],
            [0.5014, 0.3470, 0.4660, 0.5190],
        ]),
    # logRank
    np.array([
            [0.6009, 0.4316, 0.4484, 0.5954],
            [0.5788, 0.4260, 0.4137, 0.5786],
            [0.6271, 0.4752, 0.5757, 0.6835],
            [0.6248, 0.4694, 0.5894, 0.6988],
        ]),
    # LRR
    np.array([
            [0.6133, 0.4411, 0.4535, 0.6491],
            [0.5583, 0.3838, 0.3726, 0.5888],
            [0.6353, 0.4838, 0.5309, 0.6905],
            [0.6362, 0.4842, 0.5270, 0.6899],
        ]),
    # NPR
    np.array([
            [0.4965, 0.3470, 0.5118, 0.4938],
            [0.2014, 0.1831, 0.2131, 0.2558],
            [0.5033, 0.3453, 0.5230, 0.4952],
            [0.4128, 0.2968, 0.4405, 0.4539],
        ]),
    # DetectGPT
    np.array([
            [0.0000, 0.0000, 0.0273, 0.0000],
            [0.0000, 0.0000, 0.0464, 0.0019],
            [0.0058, 0.0258, 0.5083, 0.1993],
            [0.0321, 0.0865, 0.5612, 0.3525],
        ]),
    # Fast_DetectGPT
    np.array([
            [0.2446, 0.2371, 0.5967, 0.6017],
            [0.2843, 0.2839, 0.6299, 0.6308],
            [0.3481, 0.3360, 0.6784, 0.6830],
            [0.4070, 0.3766, 0.6825, 0.7162],
        ]),
    # DNA-GPT
    np.array([
        [0.5830, 0.4617, 0.4255, 0.6052],
        [0.4322, 0.3751, 0.2772, 0.4323],
        [0.6236, 0.4850, 0.5825, 0.7040],
        [0.6109, 0.4774, 0.4774, 0.6928],
    ]),
    # Revise-Detect.
    np.array([
        [0.6422, 0.5005, 0.4821, 0.4708],
        [0.5686, 0.4607, 0.3483, 0.3115],
        [0.6472, 0.5113, 0.6429, 0.6271],
        [0.6372, 0.5093, 0.6734, 0.6871],
    ]),
    # Binoculars
    np.array([
        [0.7677, 0.7221, 0.7991, 0.8328],
        [0.7601, 0.7218, 0.7993, 0.8328],
        [0.7269, 0.6955, 0.7973, 0.8132],
        [0.7720, 0.7195, 0.7927, 0.8432],
    ]),
    # Roberta
    np.array([
            [1.0000, 0.7590, 0.7768, 0.7069],
            [0.6843, 0.9985, 0.7179, 0.6717],
            [0.7858, 0.7272, 0.9965, 0.9424],
            [0.8264, 0.8415, 0.8510, 0.9950],
        ]),
    # Roberta Large
    np.array([
            [0.9990, 0.6642, 0.6603, 0.6662],
            [0.6693, 0.9895, 0.6704, 0.6693],
            [0.6673, 0.6662, 0.9773, 0.7752],
            [0.6818, 0.6641, 0.9433, 0.9890],
        ]),
    # X-Roberta
    np.array([
            [1.0000, 0.5921, 0.6507, 0.6229],
            [0.7199, 0.9955, 0.6860, 0.6738],
            [0.6834, 0.6477, 0.9876, 0.7573],
            [0.6775, 0.6799, 0.7917, 0.9905],
    ]),
    # X-Roberta Large
    np.array([
            [0.9985, 0.6675, 0.6684, 0.6684],
            [0.6686, 0.9895, 0.6817, 0.6699],
            [0.6831, 0.6558, 0.9831, 0.9252],
            [0.6691, 0.6617, 0.6668, 0.9266],
        ]),
]

rows = ['arxiv', 'xsum', 'writing', 'review']
cols = ['arxiv', 'xsum', 'writing', 'review']

cmap = plt.get_cmap('RdPu')

titles = ['Likihood', 'Rank', 'LogRank', 'LRR',
          'NPR', 'DetectGPT', 'Fast-DetectGPT', 'DNA-GPT',
          'Revise-Detect.', 'Binoculars', 'Rob-Base', 'X-Rob-Base']

fig, axes = plt.subplots(3, 4, figsize=(18, 12))  # figsize可以根据需要进行调整
fig.tight_layout(pad=2.0)

for i, ax in enumerate(axes.flatten()):
    sns.heatmap(data_list[i], annot=True, linewidths=.5, cmap=cmap,
                xticklabels=cols, yticklabels=rows, ax=ax)
    ax.set_title(titles[i])

plt.savefig('cross_domains_heatmap.pdf')
plt.show()